data fetch method for invoice details.
will be called from a remote ERP system to get invoice data from Transmate into their system.
background

we will be doing an integration with an ERP that will get all invoice information on settlement. This assignment is creating the code to build the data for the data transfer.

How will the data be fetched?

    when user clicks on the settle button, a job will be triggered that calls the ERP endpoint, the ERP endpoint will then call the api (not in this scope)
    when called, the report returns the itemized data to the ERP.

data structure
collection 	description 	key
invoices 	invoice header data 	_id: invoiceId
invoices.items 	invoice details 	invoiceId, shipmentId
shipments 	shipment collection 	_id: shipmentId

invoice Items collection has an array of costs that are being invoiced
shipment collection holds cost center and cost group data in a split (%) basis in the costParams object
cost center distribution

the shipment holds costCenter split information as:

{
    costParams: {
        costCenterAllocation: [
            {
                id: costCenterId,
                group: costCenterGroup,
               allocation: { type: Number, min: 0, max: 100 }
            }
        ]
   }
}

where a cost center split is found in the shipment:
take each invoice detail line and split the cost center && group according to the split rule
this means that you can have 1 line in the aggregation result for n lines after the split
data fetching steps:

    aggregate invoice > invoice.details > shipment.costParams
    cost center && cost group split

output data structure:

{
    header: {
        number: invoice.number
        accountId: invoice.sellerId,
        supplierId: (2)
        date: invoice.date
        deliveryDate : delivery date (1)
        totalAmount: total net amount
    },
    items: [{
        shipmentId: shipment._id,
        number: shipment.number,
        delivery: shipment.delivery.dateActual || shipment.delivery.datePlanned,
        description: invoiceDetail.costItem.description
        cost center (3): 
        net amount in original currency  invoiceDetail.costItem.description
        gross amount in original currency
        tax rate 
        tax amount
        description (4) : shipment.notes.invoice
    }],
    documents: [ {link: ... , name} ],
    ts:  new Date()
}

(1) delivery date on header: items[0].delivery date
(2) supplierId -> Accounts data, project the accounts {} where $elemMatch {accountId === accountId of context} .coding
(3) shipment has a cost center split -> costs need to be distributed
(4) description is the notes field in the shipment, need to be a string description (max 100 chars) >> invoice notes fields â†’ strip \n characters
coding style

I prefer factory functions like this:

export const getInvoiceDataReport = ({accountId, userId}) => ({
    accountId,
    userId,
    init({invoiceId}){
        ...
        return this;
    },
    get({options}){
    // code here
   // optionally with multiple private functions
    return result
}

TODO

1. in the folder imports/api/invoice/services make a new service file (typescript please) for the function
2. create fn that does a mongo aggregation for an invoiceId. parameter in the
3. mongo result is manipulated to add in cost center data from the shipment
4. write mocha tests to check the function

